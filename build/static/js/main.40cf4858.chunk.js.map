{"version":3,"sources":["features/login/loginSlice.js","features/login/Login.js","features/header/Header.js","features/otp/Otp.js","App.js","app/store.js","index.js"],"names":["loginSlice","createSlice","name","initialState","status","mobile_no","error","reducers","loginHandler","state","console","log","match","window","location","href","mobileNoHandler","action","payload","actions","Login","dispatch","useDispatch","errorStatus","useSelector","login","className","type","onKeyUp","e","target","value","placeholder","onClick","preventDefault","Header","Otp","App","exact","path","store","configureStore","reducer","loginReducer","middleware","routerMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPASaA,EAAaC,YAAY,CAClCC,KAAM,QACNC,aARiB,CACjBC,OAAQ,OACRC,UAAW,GACXC,OAAO,GAOPC,SAAU,CACNC,aAAc,SAACC,GACXC,QAAQC,IAAI,eAEZF,EAAML,OAAS,UAIXK,EAAMJ,UAAUO,MAFN,oBAGVF,QAAQC,IAAI,QACZF,EAAMH,OAAQ,EAEdO,OAAOC,SAASC,KAAO,oBAGvBN,EAAMH,OAAQ,EACdI,QAAQC,IAAI,WAGpBK,gBAAiB,SAACP,EAAOQ,GACrBR,EAAMJ,UAAYY,EAAOC,QACzBR,QAAQC,IAAI,iBAAkBM,O,EAKOjB,EAAWmB,QAA7CX,E,EAAAA,aAAcQ,E,EAAAA,gBAIdhB,IAAf,Q,eCpCe,SAASoB,IACpB,IAAMC,EAAWC,cAGXC,GADSC,aAAY,SAACf,GAAD,OAAWA,EAAMgB,MAAMrB,UAC9BoB,aAAY,SAACf,GAAD,OAAWA,EAAMgB,MAAMnB,UACvDI,QAAQC,IAAI,cAAeY,GAM3B,OACI,uBAAMG,UAAU,eAAhB,UACI,sBAAKA,UAAU,aAAf,UACI,uBAAOC,KAAK,OAAOC,QAAS,SAACC,GAAD,OAAOR,EAASL,EAAgBa,EAAEC,OAAOC,SAASC,YAAY,qBAC1E,GAAfT,EAAsB,sBAAMG,UAAU,QAAhB,6CAAiE,QAE5F,wBAAQA,UAAU,MAAMO,QAXX,SAACJ,GAClBA,EAAEK,iBACFxB,QAAQC,IAAIH,KACZa,EAASb,MAQL,uBCrBG,SAAS2B,IACpB,OACI,wCCDO,SAASC,IACpB,OACI,sC,mBCyBOC,MAnBf,WACE,OACE,qBAAKX,UAAU,OAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,UACE,cAACJ,EAAD,IACA,cAACf,EAAD,OAEF,cAAC,IAAD,CAAOmB,KAAK,kBAAZ,SACE,cAACH,EAAD,cClBCI,EAAQC,YAAe,CAClCC,QAAS,CACPjB,MAAOkB,GAETC,WAAY,CAACC,sBCAfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.40cf4858.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { push } from 'react-router-redux';\n\nconst initialState = {\n    status: 'idle',\n    mobile_no: '',\n    error: false\n};\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        loginHandler: (state) => {\n            console.log('-----------');\n            \n            state.status = 'loading';\n\n            const regEx = /^[6-9][0-9]{9}$/\n\n            if (state.mobile_no.match(regEx) ) {\n                console.log('done');\n                state.error = false;\n                // push('/otp-validation')\n                window.location.href = '/otp-validation';\n\n            } else {\n                state.error = true;\n                console.log('error');\n            }\n        },\n        mobileNoHandler: (state, action) => {\n            state.mobile_no = action.payload;\n            console.log('mobile handler', action)\n        }\n    }\n});\n\nexport const { loginHandler, mobileNoHandler } = loginSlice.actions;\n\nexport const selectState = (state) => state.login.state;\n\nexport default loginSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginHandler, mobileNoHandler } from './../login/loginSlice';\n// import { Redirect } from \"react-router-dom\";\n\nimport './style.css';\n\nexport default function Login() {\n    const dispatch = useDispatch();\n\n    const status = useSelector((state) => state.login.status)\n    const errorStatus = useSelector((state) => state.login.error)\n    console.log('errorStatus', errorStatus)\n    const eventHandler = (e) => {\n        e.preventDefault();\n        console.log(loginHandler());\n        dispatch(loginHandler())\n    }\n    return (\n        <form className=\"loginWrapper\">\n            <div className=\"fieldGroup\">\n                <input type=\"text\" onKeyUp={(e) => dispatch(mobileNoHandler(e.target.value))} placeholder=\"Enter mobile no.\" />\n                {errorStatus == true ? <span className=\"error\">Please enter correct mobile no.</span> : null}\n            </div>\n            <button className=\"btn\" onClick={eventHandler}>Submit</button>\n        </form>\n    )\n}","import React, { useState } from 'react';\n\n\nexport default function Header() {\n    return (\n        <div>Login</div>\n    )\n}","import React, { useState } from 'react';\n\n// import './style.css';\n\nexport default function Otp() {\n    return (\n        <div>otp</div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Login from './features/login/Login';\nimport Header from './features/header/Header';\nimport Otp from './features/otp/Otp';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Header />\n            <Login />\n          </Route>\n          <Route path=\"/otp-validation\">\n            <Otp />\n          </Route>\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport loginReducer from '../features/login/loginSlice';\nimport { routerMiddleware } from 'react-router-redux'\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n  },\n  middleware: [routerMiddleware]\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}